import 'package:fl_chart/fl_chart.dart';
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';

class SparkLineChart extends StatefulWidget {
  const SparkLineChart({super.key});

  @override
  State<SparkLineChart> createState() => _SparkLineChartState();
}

class _SparkLineChartState extends State<SparkLineChart> {
  @override
  Widget build(BuildContext context) {
    // Transformando os dados em FlSpot
    List<FlSpot> spots = prices
        .map(
          (e) => FlSpot(
            e[0].toDouble(), // timestamp em ms
            e[1].toDouble(), // preço
          ),
        )
        .toList();

    // Determinando limites do gráfico
    double minX = spots.map((e) => e.x).reduce((a, b) => a < b ? a : b);
    double maxX = spots.map((e) => e.x).reduce((a, b) => a > b ? a : b);
    double minY = spots.map((e) => e.y).reduce((a, b) => a < b ? a : b);
    double maxY = spots.map((e) => e.y).reduce((a, b) => a > b ? a : b);

    return Scaffold(
      appBar: AppBar(
        title: const Text('Crypto Price Chart'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: LineChart(
          LineChartData(
            gridData: FlGridData(show: false),
            titlesData: FlTitlesData(
              leftTitles: AxisTitles(
                sideTitles: SideTitles(showTitles: true),
              ),
              bottomTitles: AxisTitles(
                sideTitles: SideTitles(
                  showTitles: true,
                  reservedSize: 40,
                  interval: (maxX - minX) / 2, // 2 ou 3 ticks no eixo X
                  getTitlesWidget: (value, meta) {
                    DateTime date = DateTime.fromMillisecondsSinceEpoch(
                      value.toInt(),
                    );
                    String formattedDate = DateFormat(
                      'dd/MM',
                    ).format(date); // dia/mês
                    return Text(
                      formattedDate,
                      style: const TextStyle(fontSize: 12),
                    );
                  },
                ),
              ),
            ),
            borderData: FlBorderData(show: true),
            minX: minX,
            maxX: maxX,
            minY: minY,
            maxY: maxY,
            lineBarsData: [
              LineChartBarData(
                spots: spots,
                isCurved: true,
                color: Colors.blueAccent,
                barWidth: 3,
                dotData: FlDotData(show: true),
                belowBarData: BarAreaData(
                  show: true,
                  color: Colors.blueAccent.withOpacity(0.3),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  List<List<double>> get prices {
    return [
      [1711843200000, 69702.3087473573],
      [1711929600000, 71246.9514406015],
      [1711983682000, 68887.7495158568],
    ];
    // return [
    //   111751.64761020488,
    //   112072.79984901128,
    //   111853.88232508626,
    //   111492.64500777487,
    //   111177.66463784108,
    //   111127.46726016133,
    //   110686.91790192894,
    //   110409.54924363771,
    //   110505.55001973202,
    //   110705.26361377492,
    //   110805.39711272641,
    //   110646.5304182009,
    //   110846.35249628387,
    //   110785.36909714933,
    //   110448.69917910869,
    //   109969.81043799862,
    //   109624.55017607489,
    //   109497.72346906656,
    //   109803.09786995356,
    //   110023.3144941601,
    //   109873.8930916779,
    //   110403.23903480718,
    //   110542.44225608995,
    //   111490.51479289168,
    //   110752.04142516552,
    //   110546.35219584999,
    //   111123.18893239835,
    //   111365.16616946645,
    //   111320.95589222391,
    //   111443.83629951079,
    //   111562.752756278,
    //   111900.94104148331,
    //   112964.68755449636,
    //   112620.51184991721,
    //   112258.88398574904,
    //   112259.72880567885,
    //   112361.22450543038,
    //   113225.00021261438,
    //   113034.03215529391,
    //   110514.16200241748,
    //   110663.4511588435,
    //   110781.59184322049,
    //   110611.41463627842,
    //   111192.72160309477,
    //   111445.2502071209,
    //   111619.38620235208,
    //   110624.30953942804,
    //   110813.80860700153,
    //   110656.308978032,
    //   110782.9680650024,
    //   110873.87504986444,
    //   111103.49983851465,
    //   111070.9293275909,
    //   110856.40824808505,
    //   110725.91196503112,
    //   110772.86794074306,
    //   110817.2532145556,
    //   110948.47286442367,
    //   110697.41836548288,
    //   110766.63559733458,
    //   110770.07248515126,
    //   110833.08962160254,
    //   110944.93163333445,
    //   110832.31716394494,
    //   110417.35028698956,
    //   110256.24911657201,
    //   110175.86574226645,
    //   110265.97583337485,
    //   110054.77331373848,
    //   110174.33371417443,
    //   110235.30370196157,
    //   110175.25026599839,
    //   110223.83395870344,
    //   110367.90950933227,
    //   110581.74308347162,
    //   110666.85100536971,
    //   110619.14326203972,
    //   110563.51042806412,
    //   110660.43142974885,
    //   110523.24469913781,
    //   110724.89293566853,
    //   111081.23400933287,
    //   111120.66444717823,
    //   111233.74012205859,
    //   111280.13329637531,
    //   111116.19537609039,
    //   111202.50300098678,
    //   111118.80281737895,
    //   111347.47926907448,
    //   111201.3073627705,
    //   110968.97113583378,
    //   111057.5596575689,
    //   111232.34796307397,
    //   111325.77408290895,
    //   111096.43172052184,
    //   111271.50729228156,
    //   111133.09269636446,
    //   110836.31395611238,
    //   110858.36729079825,
    //   111245.9380531357,
    //   110952.3755840546,
    //   111020.74120294617,
    //   111150.0833279388,
    //   111249.96720226432,
    //   111630.32037940944,
    //   112045.71769353836,
    //   112019.40012143513,
    //   112071.36935811849,
    //   112024.44759077854,
    //   111996.26686941311,
    //   112489.14407785248,
    //   112601.63757963854,
    //   112434.7369592822,
    //   112206.36301124805,
    //   112456.23416521978,
    //   112067.347001549,
    //   112025.1685727209,
    //   112273.04214360457,
    //   112223.03656606357,
    //   112025.12878118771,
    //   111652.0713866927,
    //   111407.09074159958,
    //   111287.14885295804,
    //   111702.97471470888,
    //   112028.60805847727,
    //   112140.77309366502,
    //   113112.94201935548,
    //   113070.31854691613,
    //   112951.8697006361,
    //   112921.314592305,
    //   112717.27875782315,
    //   112500.52744001287,
    //   112676.69684972118,
    //   112774.8919592429,
    //   111729.81552424721,
    //   110870.22649131795,
    //   110976.01267464506,
    //   111031.54556997617,
    //   111145.96752255705,
    //   111319.25301235504,
    //   111359.19585339191,
    //   111301.75137263995,
    //   111518.10122362581,
    //   111521.54423183508,
    //   111062.11173220031,
    //   111023.09957073671,
    //   111397.55074284918,
    //   111525.92713938442,
    //   111521.6910568116,
    //   111567.4027745938,
    //   112528.44834154386,
    //   112363.70010957935,
    //   112249.77986728513,
    //   112321.22186740591,
    //   112255.32408911726,
    //   113426.4487582137,
    //   113934.39669773277,
    //   113891.18838609783,
    //   113903.95331929345,
    //   113672.21437753727,
    //   113734.63302411242,
    //   113592.01651974638,
    //   113402.84560367846,
    //   113625.82028845928,
    //   113885.30512691998,
    //   113935.59752053465,
    // ];
  }
}
